#  devices.conf -- sample device configuration file
#  Copyright (C) 2013, 2015, 2016  SEIKO EPSON CORPORATION
#
#  License: GPL-3.0+
#  Author : EPSON AVASYS CORPORATION
#
#  This file is part of the 'Utsushi' package.
#  This package is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License or, at
#  your option, any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#  You ought to have received a copy of the GNU General Public License
#  along with this package.  If not, see <http://www.gnu.org/licenses/>.

#  The configuration file format is quite straightforward and resembles
#  that of Windows INI files and Samba configuration files.  Lines that
#  start with a '#' (like this one) or a ';' are comments and ignored.
#  Empty lines are also ignored.  Non-empty lines consist of a
#
#    key  =  value
#
#  entry.  White space around the 'key' and 'value' is ignored.  White
#  space internal to a value is kept.  Key may not contain white space.
#  Key parts are separated by a '.', like so:
#
#    this.is.a.key
#
#  Key parts are strictly ASCII and consist of a letter followed by
#  zero of more letters or digits.  Values are UTF-8 text.
#
#  Keys with a common prefix of parts may be grouped in sections if
#  you find that more convenient.  So instead of saying:
#
#    common.prefix.key1 = val1
#    common.prefix.key2 = val2
#
#  you can just as well use
#
#    [common.prefix]
#    key1 = val1
#    key2 = val2
#
#  The section header, '[common.prefix]' above, is in effect until the
#  next section header, or the end of file.

#  Devices not automatically detected by Utsushi can be configured in a
#  [devices] section as shown below.  Each device is given an arbitrary
#  key that is used to tie together its configuration attributes.  The
#  only required attribute is the device's 'udi'.  The 'name', 'model'
#  and 'vendor' attributes are optional.  If not specified, an attempt
#  is made to obtain 'vendor' and 'model' information directly from the
#  device itself.  A 'name' will be generated from the other attributes
#  if not explicitly configured.
#
#  The 'udi' attribute's value uses a URL-like syntax.  It starts with
#  a driver name and a connection "class", followed by a string that is
#  dependent on the driver and connection values.  These three parts
#  are separated by a ':'.

[devices]

dev1.udi  = esci:usb:/sys/devices/pci0000:00/0000:00:1a.7/usb9/9-5/9-5:1.0
dev1.name = スキャナー

#  The 'dev1' device above will use the 'esci' driver and is connected
#  via a USB cable.  The string is an OS specific location that is
#  understood by Utsushi's USB support.  No vendor and model are set
#  so that information may be obtained from the device.  This could
#  use driver provided information as well as USB information.  The
#  name will be used as is and should appear in user visible places.
#  BTW, that name is just 'scanner' but in Japanese to show that you
#  should be able to use UTF-8 encoded values.
#  FIXME: UTF-8 values are currently ignored :-(

dev2.udi    = esci:networkscan://192.168.0.2:1865
dev2.model  = DS-5500
dev2.vendor = EPSON

#  The 'dev2' device is set up to use a 'networkscan' connection (a
#  non-free plugin for networked EPSON devices) in combination with
#  the 'esci' driver to communicate with a device at the IP address
#  and port shown.  The configured model and vendor attributes will
#  be used to construct a name for use in the user interface.

#  The section below adds a third device taking full advantage of the
#  common prefix mechanism.  It does not specify a connection "class"
#  and leaves it up to a hypothetical 'sane' driver to connect to an
#  EPSON multi-function peripheral supported by the 'epkowa' backend
#  with USB vendor and product IDs as specified.  The device has been
#  nicknamed 'foo' and the model name been set so that the backend's
#  model name will be overridden (quite understandle considering its
#  length and ambiguity).

[devices.mfp1]

udi    = sane::epkowa:usb:0x04b8:0x0848
name   = foo
model  = Stylus Office BX300F
